@model GidIndustrial.Gideon.WebApi.Models.Repair
@using System;

<style type="text/css">
    h1{
        color:red;
    }
    h2.page-title{
        margin:3px 0;
        font-size:25px;
        font-weight:normal;
    }
    *{
        font-family: Arial, Helvetica, sans-serif;
        box-sizing:border-box;
        font-size:18px;
    }
    .purchase-order-outline{
        border: 2px solid gray;
    }
    .purchase-order-number-header{
        font-size:25px;
        text-align: center;
        margin:15px 0;
    }
    .contact-info-container{
        display:inline-block;
        width:100%;
    }
    .column{
        width:49%;
        display:block;
        float:left;
    }
    .column.right{
        margin-left:2%;
    }
    .column div{
        width:100%;
    }
    .contact-info-container label{
        width:144px;
        display:inline-block;
    } 
    .contact-info-container span{
        display:inline-block;
    }
    .billing-address-container,.shipping-address-container{
        width:49%;
        float: left;
        display:inline-block;
    }
    .shipping-address-container{
        margin-left:2%;
    }
    .billing-address-container h2, .shipping-address-container h2{
        background: whitesmoke;
        border-radius: 3px;
        padding:10px;
        text-align: center;
    }
    .disclaimers{
        padding-top:30px;
    }
    .disclaimers p{
        font-size:14px;
        font-style: italic;
    }
    .header-container{
        margin:0; padding:0;
        display: -webkit-box;
        -webkit-box-pack: justify;
        -webkit-box-align: center;
    }
    .purchase-order-title{
        font-size:35px;
    }
    .img-address-container{

    }
    .info-boxes-container{
        display:inline-block;
        width:100%;
    }
    .info-box{
        width:32%;
        margin:1%;
        background-color: #f1f1f1;
        padding:5px;
        display:block;
        float:left;
    }
    .info-box.banking-info{
        width:40%;
    }
    .info-box.banking-info .info-box-body div {
        padding:0;
    }
    .info-box.vat-info{
        width:24%;
    }
    .info-box.vat-info .info-box-body div {
        padding:0;
    }
    .info-box.first{
        margin-left:0;
    }
    .info-box.last{
        margin-right:0;
    }
    .info-box-title, .line-items-header-container{
        background-color: #dfdfdf;
        padding:1px 5px;
    }
    .line-items-header-text, .info-box-title-text{
        font-size:26px;
    }
    .info-box-body, .line-items-table-container{
        padding:8px;
    }
    .info-box-body div{
        padding:0px 0;
    }
    .info-box.address-box .info-box-body div{
        padding: 0px 0;
    }
    .gid-address-container div{
        font-size:16px;
        line-height:1.1;
    }
    *{
        font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }
    .page-title-container{
        display: -webkit-box;
        -webkit-box-pack: center;
        padding: 3px 0 7px;
    }
</style>
<div>
    <div>
        <div class="header-container">
            <img style="width:131px; height:80px;" src='@ViewData["LogoUrl"]' />
            <div class="gid-address-container">
                <div>@Model.SalesOrder.GidLocationOption.MainAddress.Name</div>
                <div>@Model.SalesOrder.GidLocationOption.MainAddress.Address1</div>
                @if(Model.SalesOrder.GidLocationOption.MainAddress.Address2 != null){<div>@Model.SalesOrder.GidLocationOption.MainAddress.Address2</div>}
                <div>@Model.SalesOrder.GidLocationOption.MainAddress.City, 
                    @Model.SalesOrder.GidLocationOption.MainAddress.State 
                    @Model.SalesOrder.GidLocationOption.MainAddress.ZipPostalCode</div>
            </div>
        </div>
        <div class="page-title-container">
            <h2 class="page-title">Repair Authorization #@Model.Id</h2>
        </div>
        <div>
        </div>
        <div>
            <div class="info-boxes-container">
                <div class="info-box first">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Information</span>
                    </div>
                    <div class="info-box-body">
                        <div>Sales Order #@Model.SalesOrder.Id</div>
                        @if(Model.SalesOrder.CustomerPurchaseOrderNumber != null && Model.SalesOrder.CustomerPurchaseOrderNumber != ""){
                            <div>Customer PO #@Model.SalesOrder.CustomerPurchaseOrderNumber</div>
                        }
                        <div>Created: @DateTime.UtcNow.ToString("d")</div>
                        @if(Model.SalesOrder.ShippingCarrier != null){
                            <div>
                                Shipping: @Model.SalesOrder.ShippingCarrier.Name
                                @if(Model.SalesOrder.ShippingCarrierShippingMethod != null){
                                    <span> - @Model.SalesOrder.ShippingCarrierShippingMethod.Name</span>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="info-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Prepared For</span>
                    </div>
                    <div class="info-box-body">
                        <div>@Model.SalesOrder.Contact.FirstName @Model.SalesOrder.Contact.LastName</div>
                        <div>@Model.SalesOrder.Email</div>
                        <div>@Model.SalesOrder.Phone</div>
                    </div>
                </div>
                <div class="info-box last">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Prepared By</span>
                    </div>
                    <div class="info-box-body">
                        <div>@Model.SalesOrder.SalesPerson.FirstName @Model.SalesOrder.SalesPerson.LastName</div>
                        <div>@Model.SalesOrder.SalesPerson.Email</div>
                        <div></div>
                    </div>
                </div>
            </div>
            <div class="info-boxes-container">
                @if(Model.SalesOrder.BillingAddress != null){
                <div class="info-box first address-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Billing Address</span>
                    </div>
                    <div class="info-box-body">
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.BillingAddress.Name)){<div>@Model.SalesOrder.BillingAddress.Name</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.BillingAddress.Address1)){<div>@Model.SalesOrder.BillingAddress.Address1</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.BillingAddress.Address2)){<div>@Model.SalesOrder.BillingAddress.Address2</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.BillingAddress.Address3)){<div>@Model.SalesOrder.BillingAddress.Address3</div>}
                        <div>@Model.SalesOrder.BillingAddress.City, @Model.SalesOrder.BillingAddress.State @Model.SalesOrder.BillingAddress.ZipPostalCode</div>
                    </div>
                </div>
                }
                @if(Model.SalesOrder.ShippingAddress != null){
                <div class="info-box address-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Shipping Address</span>
                    </div>
                    <div class="info-box-body">
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.ShippingAddress.Name)){<div>@Model.SalesOrder.ShippingAddress.Name</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.ShippingAddress.Address1)){<div>@Model.SalesOrder.ShippingAddress.Address1</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.ShippingAddress.Address2)){<div>@Model.SalesOrder.ShippingAddress.Address2</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.SalesOrder.ShippingAddress.Address3)){<div>@Model.SalesOrder.ShippingAddress.Address3</div>}
                        <div>@Model.SalesOrder.ShippingAddress.City, @Model.SalesOrder.ShippingAddress.State @Model.SalesOrder.ShippingAddress.ZipPostalCode</div>
                    </div>
                </div>
                }
            </div>
            <style type="text/css">
            .line-items-table-spacer{
                width:100%;
                height:30px;
            }
            .line-items-table{
                width:100%;
                margin-top:5px;
            }
            .product-header{
                width:70%;
            }
            .grand-total-text, .additional-charge-value{
                display:inline-block;
            }
            .total-column, th.total-column, .grand-total-text, .additional-charge-value{
                width:100px;
                text-align: left;
                min-width:100px;
                max-width:100px;
            }
            th, td{
                text-align: left;
            }
            .total-container{
                text-align: right;
                margin-top:20px;
            }
            .grand-total-title-text{
                font-weight:bold;
            }
            .line-items-table thead th{
                background:whitesmoke;
                border-bottom:1px solid gray;
                padding:3px;
            }
            .line-items-table tr td{
                padding:3px;
                border-bottom:1px solid gray;
            }
            .page2{
                page-break-before: always;
            }
            .line-items-table-container{
                background-color: #f1f1f1;
            }
            th{
                white-space: nowrap;
            }
            </style>
            <div class="line-items-table-spacer"></div>
            <div class="line-items-table-container">
                <div class="line-items-header-container">
                    <span class="line-items-header-text">Line Items</span>
                </div>
                <table class="line-items-table">
                    <thead>
                        <th class="product-header">Product</th>
                        <th>Lead Time</th>
                        <th>Warranty</th>
                        <th>Condition</th>
                        <th>Unit Price</th>
                        <th>Qty</th>
                        <th class="total-column">Total</th>
                    </thead>
                        @{
                            double grandTotalPrice = 0;
                            double subTotal = 0;
                        }
                        @foreach(var lineItem in @Model.SalesOrder.LineItems)
                        {
                            var productName = lineItem.Product != null ? lineItem.Product.PartNumber : lineItem.ProductName;
                            if (lineItem.DisplayPartNumber != null && lineItem.DisplayPartNumber != "")
                            {
                                productName = lineItem.DisplayPartNumber;
                            }
                            var price = lineItem.Price == null ? 0 : lineItem.Price;
                            var priceAfterDiscount = (double)price;
                            if(lineItem.DiscountPercent != null && lineItem.DiscountPercent > 0){
                                priceAfterDiscount = ((double)price)*(100 - (double)lineItem.DiscountPercent)*.01;
                            }
                            double itemTotalPrice;
                            if(lineItem.Quantity > 0){
                                itemTotalPrice = priceAfterDiscount*(double)lineItem.Quantity;
                            }else{
                                itemTotalPrice = priceAfterDiscount;
                            }
                            subTotal += itemTotalPrice;
                            <tr>
                                <td>@productName</td>
                                <td>
                                    @if(lineItem.LeadTime != null){
                                        @lineItem.LeadTime.Value;
                                    }
                                </td>
                                <td>
                                    @if(lineItem.Warranty != null){
                                        @lineItem.Warranty.Value;
                                    }
                                </td>
                                <td>
                                    @if(lineItem.LineItemConditionType != null){
                                        @lineItem.LineItemConditionType.Value;
                                    }
                                </td>
                                <td>@Model.SalesOrder.CurrencyOption.Symbol@priceAfterDiscount.ToString("N2")</td>
                                <td>@lineItem.Quantity</td>
                                <td>@Model.SalesOrder.CurrencyOption.Symbol@itemTotalPrice.ToString("N2")</td>
                            </tr>
                            @if(@lineItem.Description != null && @lineItem.Description != ""){
                                <tr >
                                    <td colspan="100">
                                        @lineItem.Description
                                    </td>
                                </tr>
                            }
                        }
                        @{
                            grandTotalPrice = subTotal;
                            if(Model.SalesOrder.SalesTax > 0){
                                grandTotalPrice += (double)Model.SalesOrder.SalesTax;
                            }else{
                                Model.SalesOrder.SalesTax = 0;
                            }
                            if(Model.SalesOrder.WireTransferFee > 0){
                                grandTotalPrice += (double)Model.SalesOrder.WireTransferFee;
                            }else{
                                Model.SalesOrder.WireTransferFee = 0;
                            }
                            if(Model.SalesOrder.CreditCardFee > 0){
                                grandTotalPrice += (double)Model.SalesOrder.CreditCardFee;
                            }else{
                                Model.SalesOrder.CreditCardFee = 0;
                            }
                            if(Model.SalesOrder.ShippingAndHandlingFee > 0){
                                grandTotalPrice += (double)Model.SalesOrder.ShippingAndHandlingFee;
                            }else{
                                Model.SalesOrder.ShippingAndHandlingFee = 0;
                            }
                            if(Model.SalesOrder.ExpediteFee > 0){
                                grandTotalPrice += (double)Model.SalesOrder.ExpediteFee;
                            }else{
                                Model.SalesOrder.ExpediteFee = 0;
                            }
                        }
                    
                </table>
                <div class="total-container">
                    <div class="additional-charge">
                        <span class="additional-charge-title">Subtotal:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@subTotal.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Sales Tax:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@Model.SalesOrder.SalesTax.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Wire Transfer Fee:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@Model.SalesOrder.WireTransferFee.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Credit Card Fee:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@Model.SalesOrder.CreditCardFee.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Shipping &amp; Handling:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@Model.SalesOrder.ShippingAndHandlingFee.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Expedite Fee:</span>
                        <span class="additional-charge-value">@Model.SalesOrder.CurrencyOption.Symbol@Model.SalesOrder.ExpediteFee.Value.ToString("N2")</span>
                    </div>
                    <span class="grand-total-title-text">Grand Total: </span>
                    <span class="grand-total-text">@Model.SalesOrder.CurrencyOption.Symbol@grandTotalPrice.ToString("N2")</span>
                </div>
            </div>
            <br>
            <div class="info-boxes-container">
                <div class="info-box first banking-info">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Return Instructions</span>
                    </div>
                    <div class="info-box-body">
                        <div>Attn: RA# @Model.Id</div>
                        <div>GID Industrial</div>
                        <div>1211 Executive Drive East</div>
                        <div>Richardson, TX 75081</div>
                    </div>
                </div>
            </div>
            <br><br>
            <div class="disclaimers">
                <p>Terms and Conditions</p>
                
                <p>The customer will pay GID Industrial the agreed-upon repair fee. All repairs are subject to a non-refundable USD $500.00 non-recurring engineering (NRE) deposit, per board, that is due at time of order confirmation. Work will not commence until GID Industrial receives the NRE deposit.</p>

                <p>If repair is needed, approved, and successful, the customer will pay GID Industrial the agreed-upon repair fee less the NRE deposit. GID Industrial will not proceed with repairs without quote confirmation from the customer. If repair is not needed, not approved, or not successful, there will be no additional repair fee; however, GID Industrial reserves the right to charge for return delivery.</p>

                <p>If the description of the problem is different from the problem listed by the customer on the RA request form, or if an item is damaged during delivery, GID Industrial will contact the customer for direction.</p>
            </div>
        </div>
    </div>
</div>
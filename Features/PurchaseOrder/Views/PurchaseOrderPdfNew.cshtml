@model GidIndustrial.Gideon.WebApi.Models.PurchaseOrder
@using GidIndustrial.Gideon.WebApi.Libraries

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Purchase Order - GID Industrial</title>
  
  
</head>



<style type="text/css">
@@font-face {
  font-family: Montserrat;
  src: url("@ViewData["Font1"]");
  font-weight: 400;
}

@@font-face {
  font-family: Montserrat;
  src: url("@ViewData["Font2"]");
  font-weight: 500;
}

@@font-face {
  font-family: Montserrat;
  src: url("@ViewData["Font3"]");
  font-weight: 600;
}

@@font-face {
  font-family: Montserrat;
  src: url("@ViewData["Font4"]");
  font-weight: 700;
}

.row-center-unset {
  display: flex;
  align-items: center;
}

.row-center-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.pad-right
{
    margin-right: 45px;
}

.row-center-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.row-center-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
.col-center-center{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.col-between{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
* {
  box-sizing: border-box;
}


body,
h1,
h2,
p {
  margin: 0px;
}



::-webkit-scrollbar {
  display: none;
}

li,
h1,
input,
p,
span,
h2,
a,
span,
label,
textarea,
button,
select {
  font-family: Arial;/*Montserrat;*/
}

a {
  text-decoration: none;
  cursor: pointer;
}

.section-title {
  color: #0c0c24;
  font-size: 52px;
  font-weight: 700;
  line-height: normal;
  
}

.navbar {
  padding: 25px 60px;
}

.menu,
.menu-content {
  display: none;
}

.navbar-left {
  height: 38px;
}

.navbar-left img {
  height: 100%;
}

.navbar-center {
  list-style: none;
  gap: 40px;
  margin: 0;
}

.navbar-center a {
  font-size: 16px;
  font-weight: 400;
  line-height: 150%;
  color: #0c0c24;
}

.navbar-right {
  gap: 16px;
}

.navbar-right img {
  width: 61px;
}

.navbar-right a {
  color: #0c0c24;
  font-size: 20px;
  font-weight: 600;
  line-height: normal;
  text-transform: capitalize;
}

.footer {
  background-color: #0c0c24;
  padding: 32px 60px 28px;
}

.footer-content > div:nth-child(1) img {
  width: 207px;
}

.footer-menu {
  gap: 40px;
}

.footer-menu a {
  color: #fff;
  font-size: 16px;
  font-weight: 400;
  line-height: 150%;
}

.footer-second-menu {
  gap: 40px;
  margin-top: 32px;
}

.footer-second-menu p {
  color: #fff;
  text-align: center;
  font-size: 16px;
  font-weight: 400;
  line-height: 150%;
  margin-left: 8px;
}

.footer-second-menu img {
  height: 20px;
}

.divider {
  height: 1px;
  opacity: 0.2;
  background-color: #fff;
  margin-top: 32px;
  margin-bottom: 33px;
}

.footer-end p {
  color: #fff;
  font-size: 14px;
  font-weight: 400;
  line-height: normal;
}

.footer-end > div {
  gap: 16px;
}

.footer-end div div {
  width: 1px;
  opacity: 0.2;
  background-color: #fff;
  height: 17px;
}

.footer-end a {
  color: #fff;
  font-size: 14px;
  font-weight: 400;
  line-height: normal;
}

.modal {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.2);
  overflow: auto;
  display: flex;
  justify-content: center;
  display: none;
}

.modal-content {
  padding: 44px;
  border-radius: 12px;
  background: #fff;
  height: max-content;
  margin: 40px 0px;
}

.close-modal {
  width: 24px;
  cursor: pointer;
}

@@media only screen and (max-width: 768px) {
  .section-title {
    font-size: 24px;
    font-weight: 600;
    line-height: normal;
  }

  .block {
    display: block;
    height: 45px;
  }

  .navbar {
    padding: 15px 16px;
  }

  .navbar-center,
  .navbar-right {
    display: none;
  }

  .menu {
    display: block;
    width: 24px;
  }

  .menu-content {
    display: block;
    height: 0px;
    overflow: hidden;
    transition: all 0.5s;
  }

  .menu-content > div {
    display: flex;
    flex-direction: column;
    padding: 24px;
    gap: 20px;
  }

  .menu-content a {
    color: #0c0c24;
    font-size: 16px;
    font-weight: 400;
    line-height: 150%;
  }

  .menu-content > div > div {
    gap: 16px;
    margin-top: 20px;
  }

  .menu-content > div img {
    width: 61px;
  }

  .menu-content > div > div a {
    color: #0c0c24;
    font-size: 20px;
    font-weight: 600;
    line-height: normal;
    text-transform: capitalize;
  }

  .footer {
    padding: 40px 16px;
  }

  .footer-content > div,
  .footer-menu {
    flex-direction: column;
  }

  .footer-menu {
    margin-top: 40px;
    gap: 20px;
  }

  .footer-second-menu {
    gap: 40px;
    margin-top: 40px;
  }

  .divider {
    margin-top: 40px;
    margin-bottom: 33px;
  }

  .footer-end {
    flex-direction: column-reverse !important;
    gap: 21px;
    width: 75%;
    margin: 0 auto;
  }

  .footer-end p {
    text-align: center;
  }

  .modal-content {
    padding: 30px 16px;
  }
}

section{
    margin: 0 auto;
}
/* header */
.header{
    padding: 30px 60px;
    background:  #0C0C24;
}
.header img{
    -webkit-filter: brightness(10);
    filter: brightness(10);
}
.header-text p{
    color: #FFF;
    /* font-family: "HK Grotesk"; */
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
}  

/* page-content */
.page-content{
    padding: 30px 60px 40px;
        /* background: #F7F7FB;*/
   background: white;

    
}
.sales-order{
    color:  #0C0C24;
    font-size: 36px;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    margin-bottom: 30px;
}
.sales-order a{
    color:  #070490;
    font-size: 36px;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
}
.row-ìnformation{
    display: flex;
    justify-content: space-between;
    margin-bottom: 24px;
    gap: 20px;
}
 .card{
    width: 100%;
    border-radius: 8px;
    background:  #FFF;
}
 .card .card-header{
    min-width: 427px;
    background: rgba(7, 4, 144, 0.08);
    padding: 16px 0px 16px 24px ;
    border-radius: 8px 8px 0px 0px;
}
 .card .card-header p{
    color:  #0C0C24;
    font-size: 20px;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
    text-transform: capitalize;
}

    .card4 {
        width: 100%;
        border-radius: 8px;
        background: #FFF;
    }

        .card4 .card-header {
            
        }

            .card4 .card-header p {
                
            }

.card-content-table{
        /* padding: 16px 24px;*/
    display: flex;
    flex-direction: column;
    gap: 16px;
}

    .card-content {
         padding: 16px 24px;
        display: flex;
        flex-direction: column;
        gap: 16px;
    }

    .card-content-banking {

    }

    .card2 {
        width: 375px;
        border-radius: 8px;
        background: #FFF;
    }



        .card2 .card-header {
            min-width: 375px;
            background: rgba(7, 4, 144, 0.08);
            padding: 16px 0px 16px 24px;
            border-radius: 8px 8px 0px 0px;
        }

            .card2 .card-header p {
                color: #0C0C24;
                font-size: 20px;
                font-style: normal;
                font-weight: 800;
                line-height: normal;
                text-transform: capitalize;
            }

    .card2-content {
        padding: 16px 24px;
        display: flex;
        flex-direction: column;
        gap: 16px;
        background: #F7F7F7;
        min-height: 200px;
    }

    .card3 {
        width: 575px;
        border-radius: 8px;
        background: #FFF;
    }

    .card3 .card-header {
        min-width: 375px;
        background: rgba(7, 4, 144, 0.08);
        padding: 16px 0px 16px 24px;
        border-radius: 8px 8px 0px 0px;
    }

        .card3 .card-header p {
            color: #0C0C24;
            font-size: 20px;
            font-style: normal;
            font-weight: 800;
            line-height: normal;
            text-transform: capitalize;
        }

    .card3-content {
        padding: 16px 24px;
        display: flex;
        flex-direction: column;
        gap: 16px;
        background: #F7F7F7;
        min-height: 120px;
    }

.label-bold{
    color: #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 800;
    line-height: 150%;
}
.label-normal{
    color: #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
}
.label-20{
    font-size: 20px !important;
}
.row-address{
    display: flex;
    justify-content: space-between;
    margin-bottom: 24px;
    gap: 20px;
}
.row-address .card{
    min-width: 650px;
    border-radius: 8px;
    background:  #FFF;
}

/* line-items */
.line-items{
    margin-bottom: 24px;
}
.line-items-list{
    border-radius: 8px;
    border: 1px solid #EDEDED;
}
.line-items-list-header{
    border-bottom: 1px solid #EDEDED;
    padding: 6px 0px;

}
.line-items-list-header .header-item{
    padding: 12px 16px;
}
.line-items-list-header .header-item p{
    color:  #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 800;
    line-height: 150%;
}
.line-items-list-item{
    padding: 6px 0px;

    border-right: 1px solid var(--web-light-grey, #EDEDED);
    border-bottom: 1px solid var(--web-light-grey, #EDEDED);
    border-left: 1px solid var(--web-light-grey, #EDEDED);

   /*  background-color: lightgray; */
}

    .list-item .group-item:nth-child(odd) {
        background-color: #F2F2F2;
    }

    .list-item .group-item:nth-child(even) {
        background-color: #F9F9F9;
    }



.line-items-list-item .item{
    padding: 8px 12px;
}
.line-items-list-item .item p{
    color:  #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
}
.line-items-list-description{

    padding-top: 2px;
    padding-bottom: 2px;
    padding-left: 12px;
    padding-right: 12px;
    border-right: 1px solid var(--web-light-grey, #EDEDED);
    border-bottom: 1px solid var(--web-light-grey, #EDEDED);
    border-left: 1px solid var(--web-light-grey, #EDEDED);
    min-height: 40px;
        /* background-color: lightgray; */
}

    #Product {
        min-width: 200px;
    }

    #Manufacturer {
        min-width: 190px;
    }

    #Description {
        min-width: 189px;
    }

    #Lead-time {
        min-width: 190px;
    }

    #Warranty {
        min-width: 120px;
    }

    #Condition {
        min-width: 180px;
    }

    #Price {
        min-width: 120px;
        /*text-align: end;*/
    }

        #Price p {
            /*text-align: end;*/
        }

    #Quantity {
        min-width: 30px;
        /*text-align: end;*/
    }

        #Quantity p {
            text-align: end;
        }

    #Total {
        min-width: 100px;
        text-align: end;
    }

        #Total p {
            text-align: end;
        }
 .line-items-total{
    display: flex;
    flex-direction: column;
    align-items: end;
}

.line-items-total-detail{
    display: flex;
    flex-direction: column;
    gap: 16px;
    min-width: 286px;
    margin-left: 750px;
    margin-right: 15px;
    margin-top: 20px;
}
/* bank */
.bank-info{
    display: flex;
    justify-content: space-between;
}
.comerica-bank{
    min-width: 616px;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    gap: 16px;
}
.comerica-bank p{
    color:  #333;
    font-size: 18px;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
}
.comerica-bank-info p{
    color: #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
}
.bank-info .card-content{
    min-width: 602px;
}
.card-description p{
    color:  #333;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
}

    .table-items-list {
        border-radius: 8px;
        border: 1px solid #EDEDED;
        border-bottom: none;
        border-spacing: 0;
        border-collapse: separate;
        width: 100%;
    }

        .table-items-list tr:last-child td:first-child {
            border-bottom-left-radius: 8px;
        }

        .table-items-list tr:last-child td:last-child {
            border-bottom-right-radius: 8px;
        }

    tbody:nth-child(even) {
        background: #f0f0f0;
    }

    tbody:nth-child(odd) {
        background: #F9F9F9;
    }



    .table-items-list th {
        border-bottom: 1px solid #EDEDED;
        text-align: left;
        padding: 18px 16px;
        color: #333;
        font-family: Arial; /*Montserrat;*/
        font-size: 16px;
        font-style: normal;
        font-weight: 800;
        line-height: 150%;
    }

    .table-items-list td {
        border-bottom: 1px solid #EDEDED;
        text-align: left;
        padding: 18px 16px;
        color: #333;
        font-family: Arial; /*Montserrat;*/
        font-size: 16px;
        font-style: normal;
        font-weight: 400;
        line-height: 150%;
    }

    tbody {
        /* page-break-inside: avoid */
    }

    thead {
        background: #F9F9F9;
    }
</style>

<body>
    <section>
        <div class="header row-center-between">
            <div>
                <img src="@ViewData["LogoUrlNew"]" alt="">
            </div>
            <div class="header-text">
                <p>@Model.GidLocationOption.MainAddress.Name</p>
                <p>@Model.GidLocationOption.MainAddress.Address1</p>
                @if (Model.GidLocationOption.MainAddress.Address2 != null)
                {
                    <p>@Model.GidLocationOption.MainAddress.Address2</p>
                }
                <p>@Model.GidLocationOption.MainAddress.City, @Model.GidLocationOption.MainAddress.State @Model.GidLocationOption.MainAddress.ZipPostalCode</p>
            </div>
        </div>
    </section>
    <section>
        <div class="page-content">
            <p class="sales-order">Purchase Order #@Model.Id</p>
            <div class="row-ìnformation ">
                <div class="card2">
                    <div class="card-header">
                        <p>Information</p>
                    </div>
                    <div class="card2-content">
                        <div class="card-item row-center-between">
                            <p class="label-normal">Purchase Order #@Model.Id</p>
                            <p class="label-normal">#@Model.Id</p>
                        </div>
                        <div class="card-item row-center-between">
                            <p class="label-normal">Created</p>
                            <p class="label-normal">@Convert.ToDateTime(Model.CreatedAt).ToString("d")</p>
                        </div>
                        @if (Model.PaymentMethod != null)
                        {
                            <div class="card-item row-center-between">
                                <p class="label-normal">Payment Method</p>
                                <p class="label-normal">@Model.PaymentMethod.Value</p>
                            </div>

                        }
                        @if (Model.ShippingMethod != null)
                        {
                            <div class="card-item row-center-between">
                                <p class="label-normal">Shipping Method</p>
                                <p class="label-normal">@Model.ShippingMethod.Value</p>
                            </div>
                        }
                        @if (Model.FreightAccountNumber != null && Model.FreightAccountNumber != "")
                        {
                            <div class="card-item row-center-between">
                                <p class="label-normal">Freight Acct. #</p>
                                <p class="label-normal">@Model.FreightAccountNumber</p>
                            </div>

                        }
                        @if (Model.ConfirmationNumber != null && Model.ConfirmationNumber != "")
                        {
                            <div class="card-item row-center-between">
                                <p class="label-normal">Confirmation Number</p>
                                <p class="label-normal">@Model.ConfirmationNumber</p>
                            </div>
                        }

                    </div>
                </div>
                <div class="card2">
                    <div class="card-header">
                        <p>Prepared for</p>
                    </div>
                    <div class="card2-content">
                        <div class="card-item row-center-between">
                            @* <p class="label-normal">Name</p> *@
                            <p class="label-normal">@Model.Supplier.Name</p>
                        </div>
                        <div class="card-item row-center-between">
                            @* <p class="label-normal">Name</p> *@
                            <p class="label-normal">@Model.Email</p>
                        </div>
                        <div class="card-item row-center-between">
                            @* <p class="label-normal">Name</p> *@
                            <p class="label-normal">@Model.Phone</p>
                        </div>

                        @if (Model.Supplier != null && Model.Supplier.Addresses.Count > 0 && Model.Supplier.Addresses[0].Address.Address1 != null && Model.Supplier.Addresses[0].Address.Address1 != "")
                        {
                            var address = Model.Supplier.Addresses[0].Address;
                            <div class="card-item row-center-between">
                                @* <p class="label-normal">Name</p> *@
                                <p class="label-normal">@address.Address1</p>
                            </div>
                            @if (address.Address2 != null && address.Address2 != "")
                            {
                                <div class="card-item row-center-between">
                                    @* <p class="label-normal">Name</p> *@
                                    <p class="label-normal">@address.Address2</p>
                                </div>
                            }
                            @if (address.Address3 != null && address.Address3 != "")
                            {
                                <div class="card-item row-center-between">
                                    @* <p class="label-normal">Name</p> *@
                                    <p class="label-normal">@address.Address3</p>
                                </div>
                            }
                            <div class="card-item row-center-between">
                                @* <p class="label-normal">Name</p> *@
                                <p class="label-normal">
                                    @address.City
                                    @if (address.City != "" && address.City != null)
                                    {
                                        <span>, </span>
                                    }
                                    @address.State @address.ZipPostalCode
                                </p>
                            </div>
                        }

                    </div>
                </div>
                <div class="card2">
                    <div class="card-header">
                        <p>Prepared by</p>
                    </div>
                    <div class="card2-content">
                        <div class="card-item row-center-between">
                            @* <p class="label-normal">Name</p> *@
                            <p class="label-normal">@Model.Preparer.FirstName @Model.Preparer.LastName</p>
                        </div>
                        <div class="card-item row-center-between">
                            @*  <p class="label-normal">Email</p> *@
                            <p class="label-normal">@Model.Preparer.Email</p>
                        </div>
                        <div class="card-item row-center-between">
                            @* <p class="label-normal">Work Phone</p> *@
                            <p class="label-normal">w) @Model.Preparer.WorkPhone</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-address">
                <div class="card3">
                    <div class="card-header">
                        <p>Billing address</p>
                    </div>
                    <div class="card3-content">
                        @if (Model.GidLocationOption.BillingAddress != null)
                        {
                            var address = Model.GidLocationOption.BillingAddress;
                            <p>@Model.GidLocationOption.BillingAddress.Name</p>
                            <p>@Model.GidLocationOption.BillingAddress.Address1</p>
                            @if (Model.GidLocationOption.BillingAddress.Address2 != null)
                            {
                                <p>@Model.GidLocationOption.BillingAddress.Address2</p>
                            }
                            <p>@Model.GidLocationOption.BillingAddress.City, @Model.GidLocationOption.BillingAddress.State @Model.GidLocationOption.BillingAddress.ZipPostalCode</p>
                            <p>@Utilities.FormatPhone(Model.GidLocationOption.BillingAddress.PhoneNumber)</p>
                            

                        }
                    </div>
                </div>
                <div class="card3">
                    <div class="card-header">
                        <p>Shipping address</p>
                    </div>
                    <div class="card3-content">
                        @if (!String.IsNullOrWhiteSpace(Model.ShippingAddress.Name))
                        {
                            <p>@Model.ShippingAddress.Name</p>
                        }
                        @if (!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address1))
                        {
                            <p>@Model.ShippingAddress.Address1</p>
                        }
                        @if (!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address2))
                        {
                            <p>@Model.ShippingAddress.Address2</p>
                        }
                        @if (!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address3))
                        {
                            <p>@Model.ShippingAddress.Address3</p>
                        }
                        <p>
                            @Model.ShippingAddress.City
                            @if (Model.ShippingAddress.City != "" && Model.ShippingAddress.City != null)
                            {
                                <span>, </span>
                            }
                            @Model.ShippingAddress.State @Model.ShippingAddress.ZipPostalCode
                        </p>

                    </div>
                </div>
            </div>


            <div class="line-items">
                <div class="card">
                    <div class="card-header">
                        <p>Line items</p>
                    </div>
                    <div class="card-content-table">


 @{
                            double grandTotalCost = 0;
                            double subTotal = 0;
 }

                        <table class="table-items-list" style="overflow: visible !important;background: none !important;">
                            <thead style="display: table-header-group; page: auto; background: none !important;">
                            <tr>
                                <th id="Product">Product</th>
                                <th id="Manufacturer">Manufacturer</th>
                                <th id="Condition">Condition</th>
                                <th id="Warranty">Warranty</th>
                                <th id="Price">Unit Cost</th>
                                <th id="Quantity">Qty</th>
                                <th id="Total">Total</th>
                            </tr>
                            </thead>


                            @foreach (var lineItem in Model.LineItems)
                                        {
                                var productName = lineItem.Product != null ? lineItem.Product.PartNumber : lineItem.ProductName;
                                var cost = lineItem.Cost == null ? 0 : lineItem.Cost;
                                var costAfterDiscount = (double)cost;
                                if (lineItem.DiscountPercent != null && lineItem.DiscountPercent > 0)
                                {
                                    costAfterDiscount = ((double)cost) * (100 - (double)lineItem.DiscountPercent) * .01;
                                }
                                double itemTotalCost;
                                if (lineItem.Quantity > 0)
                                {
                                    itemTotalCost = costAfterDiscount * (double)lineItem.Quantity;
                                }
                                else
                                {
                                    itemTotalCost = costAfterDiscount;
                                }
                                subTotal += itemTotalCost;
                                            var description = lineItem.Description ?? "";
                                            if (description == "" && lineItem.Product != null && lineItem.Product.Description != null)
                                            {
                                                description = lineItem.Product.Description;
                                            }

                                <tbody>
                                <tr>
                                    <td id="Product">@productName</td>
                                        <td id="Manufacturer">@(lineItem.Product.Manufacturer != null ? lineItem.Product.Manufacturer.Name : "")</td>
                                    <td id="Condition">@(lineItem.LineItemConditionType != null ? lineItem.LineItemConditionType.Value : "")</td>
                                        <td id="Warranty">@lineItem.WarrantyString</td>
                                    <td id="Price">@Model.CurrencyOption.Symbol@costAfterDiscount.ToString("N2")</td>
                                    <td id="Quantity">@lineItem.Quantity</td>
                                    <td id="Total">@Model.CurrencyOption.Symbol@itemTotalCost.ToString("N2")</td>
                                </tr>
                                <tr>
                                    <td colspan="7" id="Description">
                                        @description
                                    </td>
                                </tr>
                                </tbody>

                                            }



                            @{
                                grandTotalCost = subTotal;
                                if (Model.SalesTax > 0)
                                {
                                    grandTotalCost += (double)Model.SalesTax;
                                }
                                else
                                {
                                    Model.SalesTax = 0;
                                }
                                if (Model.WireTransferFee > 0)
                                {
                                    grandTotalCost += (double)Model.WireTransferFee;
                                }
                                else
                                {
                                    Model.WireTransferFee = 0;
                                }
                                if (Model.ShippingAndHandlingFee > 0)
                                {
                                    grandTotalCost += (double)Model.ShippingAndHandlingFee;
                                }
                                else
                                {
                                    Model.ShippingAndHandlingFee = 0;
                                }
                                if (Model.ExpediteFee > 0)
                                {
                                    grandTotalCost += (double)Model.ExpediteFee;
                                }
                                else
                                {
                                    Model.ExpediteFee = 0;
                                }
                            }
                           
                        </table>




                        <div class="line-items-total">
                            <div class="line-items-total-detail">
                                <div class="line-items-total-detail-row row-center-between">
                                    <p class="label-normal">Subtotal</p>
                                    <p class="label-bold">@Model.CurrencyOption.Symbol@subTotal.ToString("N2")</p>
                                </div>
                                @if (Model.SalesTax.HasValue && Model.SalesTax.Value > 0)
                                { 
                                    <div class="line-items-total-detail-row row-center-between">
                                        <p class="label-normal">Sales Tax</p>
                                        <p class="label-bold">@Model.CurrencyOption.Symbol@Model.SalesTax.Value.ToString("N2")</p>
                                    </div>
                                }
                                @if (Model.WireTransferFee.HasValue && Model.WireTransferFee.Value > 0)
                                {
                                    <div class="line-items-total-detail-row row-center-between">
                                        <p class="label-normal">Wire Transfer Fee</p>
                                        <p class="label-bold">@Model.CurrencyOption.Symbol@Model.WireTransferFee.Value.ToString("N2")</p>
                                    </div>
                                }

                                
                                <div class="line-items-total-detail-row row-center-between">
                                    <p class="label-normal">Shipping & Handling</p>
                                    <p class="label-bold">@Model.CurrencyOption.Symbol@Model.ShippingAndHandlingFee.Value.ToString("N2")</p>
                                </div>
                                @if (Model.ExpediteFee.HasValue && Model.ExpediteFee.Value > 0)
                                {
                                    <div class="line-items-total-detail-row row-center-between">
                                        <p class="label-normal">Expedite Fee</p>
                                        <p class="label-bold">@Model.CurrencyOption.Symbol@Model.ExpediteFee.Value.ToString("N2")</p>
                                    </div>
                                }

                                <div class="line-items-total-detail-row row-center-between">
                                    <p class="label-bold label-20">Grand total</p>
                                    <p class="label-bold label-20">@Model.CurrencyOption.Symbol@grandTotalCost.ToString("N2")</p>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
            </div>
            <div class="card4" style="margin-bottom: 0px;">
                <div class="card-header">
                    
                </div>
                <div class="card-content-banking">
                    <div class="bank-info">
                        <div class="comerica-bank">
@*                             <p>Comerica Bank</p>
                            <div class="comerica-bank-info">
                                <p>910 E. Campbell Rd.  </p>
                                <p>Richardson, TX 75081</p>
                                <p>USA</p>
                            </div> *@
                        </div>
                        <div class="card-content">
                            @* <div class="card-item row-center-between pad-right">
                                <p class="label-normal">Beneficiary</p>
                                <p class="label-bold">GID Holdings LLC</p>
                            </div>
                            <div class="card-item row-center-between pad-right">
                                <p class="label-normal">Account number</p>
                                <p class="label-bold">1883398107</p>
                            </div>
                            <div class="card-item row-center-between pad-right">
                                <p class="label-normal">Routing number</p>
                                <p class="label-bold">111000753</p>
                            </div>
                            <div class="card-item row-center-between pad-right">
                                <p class="label-normal">SWIFT code</p>
                                <p class="label-bold">MNBDUS33</p>
                            </div> *@
                        </div> 
                    </div> 
                </div>
            </div>
@*             <div class="card">
                <div class="card-content-banking card-description">
                    <p>Terms and Conditions can be found on the next page.</p>
                </div>
            </div> *@
        </div>
    </section>
</body>
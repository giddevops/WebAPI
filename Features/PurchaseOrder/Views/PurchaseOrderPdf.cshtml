@model GidIndustrial.Gideon.WebApi.Models.PurchaseOrder
@using GidIndustrial.Gideon.WebApi.Libraries

<style type="text/css">
    h1{
        color:red;
    }
    h2.page-title{
        margin:3px 0;
        font-size:25px;
        font-weight:normal;
    }
    *{
        font-family: Arial, Helvetica, sans-serif;
        box-sizing:border-box;
        font-size:18px;
    }
    .purchase-order-outline{
        border: 2px solid gray;
    }
    .purchase-order-number-header{
        font-size:25px;
        text-align: center;
        margin:15px 0;
    }
    .contact-info-container{
        display:inline-block;
        width:100%;
    }
    .column{
        width:49%;
        display:block;
        float:left;
    }
    .column.right{
        margin-left:2%;
    }
    .column div{
        width:100%;
    }
    .contact-info-container label{
        width:144px;
        display:inline-block;
    } 
    .contact-info-container span{
        display:inline-block;
    }
    .billing-address-container,.shipping-address-container{
        width:49%;
        float: left;
        display:inline-block;
    }
    .shipping-address-container{
        margin-left:2%;
    }
    .billing-address-container h2, .shipping-address-container h2{
        background: whitesmoke;
        border-radius: 3px;
        padding:10px;
        text-align: center;
    }
    .disclaimers{
        padding-top:30px;
    }
    .disclaimers p{
        font-size:13px;
        font-style: italic;
    }
    .header-container{
        margin:0; padding:0;
        display: -webkit-box;
        -webkit-box-pack: justify;
        -webkit-box-align: center;
    }
    .purchase-order-title{
        font-size:35px;
    }
    .img-address-container{

    }
    .info-boxes-container{
        /*display:inline-block;
        -webkit-box-align: center; */
        width:100%;
        display: -webkit-box;
        -webkit-box-pack: justify;
    }
    .info-boxes-container.align-start{
        -webkit-box-pack:start;
    }
    .info-box{
        width:32%;
        margin: 1% 0;
        background-color: #f1f1f1;
        padding:5px;
        /*display:block;
        float:left;*/
    }
    .info-box.banking-info{
        width:40%;
    }
    .info-box.banking-info .info-box-body div {
        padding:0;
    }
    .info-box.vat-info{
        width:24%;
    }
    .info-box.vat-info .info-box-body div {
        padding:0;
    }
    .info-box.first{
        margin-left:0;
    }
    .info-box.last{
        margin-right:0;
    }
    .info-box-title, .line-items-header-container{
        background-color: #dfdfdf;
        padding:1px 5px;
    }
    .line-items-header-text, .info-box-title-text{
        font-size:26px;
    }
    .info-box-body, .line-items-table-container{
        padding:8px;
    }
    .info-box-body div{
        padding:0px 0;
    }
    .info-box.address-box .info-box-body div{
        padding: 0px 0;
    }
    .gid-address-container div{
        font-size:16px;
        line-height:1.1;
    }
    *{
        font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }
    .page-title-container{
        display: -webkit-box;
        -webkit-box-pack: center;
        padding: 3px 0 7px;
    }
</style>
<div>
    <div>
        <div class="header-container">
            <img style="width:131px; height:80px;" src="@ViewData["LogoUrl"]" />
            <div class="gid-address-container">
                <div>@Model.GidLocationOption.MainAddress.Name</div>
                <div>@Model.GidLocationOption.MainAddress.Address1</div>
                @if(Model.GidLocationOption.MainAddress.Address2 != null){<div>@Model.GidLocationOption.MainAddress.Address2</div>}
                <div>@Model.GidLocationOption.MainAddress.City, @Model.GidLocationOption.MainAddress.State @Model.GidLocationOption.MainAddress.ZipPostalCode</div>
            </div>
        </div>
        <div class="page-title-container">
            <h2 class="page-title">Purchase Order #@Model.Id</h2>
        </div>
        <div>
        </div>
        <td>
            <div class="info-boxes-container">
                <div class="info-box first">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Information</span>
                    </div>
                    <div class="info-box-body">
                        <div>Purchase Order #@Model.Id</div>
                        <div>Created: @DateTime.UtcNow.ToString("d")</div>
                        @if(Model.PaymentMethod != null){
                            <div>Payment Method: @Model.PaymentMethod.Value</div>
                        }
                        @if(Model.ShippingMethod != null){
                            <div>Shipping Method: @Model.ShippingMethod.Value</div>
                        }
                        @if(Model.FreightAccountNumber != null && Model.FreightAccountNumber != ""){
                            <div>Freight Acct. #: @Model.FreightAccountNumber</div>
                        }
                        @if(Model.ConfirmationNumber != null && Model.ConfirmationNumber != ""){
                            <div>Confirmation Number: @Model.ConfirmationNumber</div>
                        }
                    </div>
                </div>
                <div class="info-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Prepared For</span>
                    </div>
                    <div class="info-box-body">
                        <div>@Model.Supplier.Name</div>
                        <div>@Model.Email</div>
                        <div>@Model.Phone</div>
                        @if(Model.Supplier != null && Model.Supplier.Addresses.Count > 0 && Model.Supplier.Addresses[0].Address.Address1 != null && Model.Supplier.Addresses[0].Address.Address1 != ""){
                            var address = Model.Supplier.Addresses[0].Address;
                            <div>@address.Address1</div>
                            @if(address.Address2 != null && address.Address2 != ""){
                                <div>@address.Address2</div>
                            }
                            @if(address.Address3 != null && address.Address3 != ""){
                                <div>@address.Address3</div>
                            }
                            <div>
                                @address.City
                                @if(address.City != "" && address.City != null){
                                    <span>, </span>
                                }
                                @address.State @address.ZipPostalCode
                            </div>
                        }
                    </div>
                </div>
                <div class="info-box last">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Prepared By</span>
                    </div>
                    <div class="info-box-body">
                        <div>@Model.Preparer.FirstName @Model.Preparer.LastName</div>
                        <div>@Model.Preparer.Email</div>
                        <div></div>
                    </div>
                </div>
            </div>
            <div class="info-boxes-container align-start">
                <div class="info-box address-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Billing Address</span>
                    </div>
                    @if(Model.GidLocationOption.BillingAddress != null){
                        var address = Model.GidLocationOption.BillingAddress;
                        <div class="info-box-body">
                            
                                <div>@Model.GidLocationOption.BillingAddress.Name</div>
                                <div>@Model.GidLocationOption.BillingAddress.Address1</div>
                                @if(Model.GidLocationOption.BillingAddress.Address2 != null){
                                    <div>@Model.GidLocationOption.BillingAddress.Address2</div>
                                }
                                <div>@Model.GidLocationOption.BillingAddress.City, @Model.GidLocationOption.BillingAddress.State @Model.GidLocationOption.BillingAddress.ZipPostalCode</div>
                            
                            <div>@Utilities.FormatPhone(Model.GidLocationOption.BillingAddress.PhoneNumber)</div>
                        </div>
                    }
                </div>
                <div style="width:2%"></div>
                @if(Model.ShippingAddress != null){
                <div class="info-box address-box">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Shipping Address</span>
                    </div>
                    <div class="info-box-body">
                        @if(!String.IsNullOrWhiteSpace(Model.ShippingAddress.Name)){<div>@Model.ShippingAddress.Name</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address1)){<div>@Model.ShippingAddress.Address1</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address2)){<div>@Model.ShippingAddress.Address2</div>}
                        @if(!String.IsNullOrWhiteSpace(Model.ShippingAddress.Address3)){<div>@Model.ShippingAddress.Address3</div>}
                        <div>
                            @Model.ShippingAddress.City
                            @if(Model.ShippingAddress.City != "" && Model.ShippingAddress.City != null){
                                <span>, </span>
                            }
                            @Model.ShippingAddress.State @Model.ShippingAddress.ZipPostalCode
                        </div>
                    </div>
                </div>
                }
            </div>
            <style type="text/css">
            .line-items-table-spacer{
                width:100%;
                height:30px;
            }
            .line-items-table{
                width:100%;
                margin-top:5px;
            }
            .product-header{
                width:70%;
            }
            .grand-total-text, .additional-charge-value{
                display:inline-block;
            }
            .total-column, .grand-total-text, .additional-charge-value{
                width:100px;
                text-align: left;
            }
            th, td{
                text-align: left;
            }
            .total-container{
                text-align: right;
                margin-top:20px;
            }
            .grand-total-title-text{
                font-weight:bold;
            }
            .line-items-table thead th{
                background:whitesmoke;
                border-bottom:1px solid gray;
                padding:3px;
            }
            .line-items-table tr td{
                padding:3px;
                border-bottom:1px solid gray;
            }
            .page2{
                page-break-before: always;
            }
            .line-items-table-container{
                background-color: #f1f1f1;
            }
            th{
                white-space: nowrap;
            }
            tr.has-description td{
                border-bottom: none;
            }
            </style>
            <div class="line-items-table-spacer"></div>
            <td class="line-items-table-container">
                <div class="line-items-header-container">
                    <span class="line-items-header-text">Line Items</span>
                </div>
                <table class="line-items-table">
                    <thead>
                        <th class="product-header">Product</th>
                        <th>Condition</th>
                        <th>Warranty</th>
                        <th>Unit Cost</th>
                        <th>Qty</th>
                        <th class="total-column">Total</th>
                    </thead>
                    
                        @{
                            double grandTotalCost = 0;
                            double subTotal = 0;
                        }
                        @foreach(var lineItem in @Model.LineItems)
                        {
                            var productName = lineItem.Product != null ? lineItem.Product.PartNumber : lineItem.ProductName;
                            var cost = lineItem.Cost == null ? 0 : lineItem.Cost;
                            var costAfterDiscount = (double)cost;
                            if(lineItem.DiscountPercent != null && lineItem.DiscountPercent > 0){
                                costAfterDiscount = ((double)cost)*(100 - (double)lineItem.DiscountPercent)*.01;
                            }
                            double itemTotalCost;
                            if(lineItem.Quantity > 0){
                                itemTotalCost = costAfterDiscount*(double)lineItem.Quantity;
                            }else{
                                itemTotalCost = costAfterDiscount;
                            }
                            subTotal += itemTotalCost;
                            <tr  @if(@lineItem.Description != null && @lineItem.Description != ""){@Html.Raw("class='has-description'");}>
                                <td>@productName</td>
                                <td>
                                    @if(lineItem.LineItemConditionType != null){
                                        @lineItem.LineItemConditionType.Value;
                                    }
                                </td>
                                <td>@lineItem.WarrantyString</td>
                                <td>@Model.CurrencyOption.Symbol@costAfterDiscount.ToString("N2")</td>
                                <td>@lineItem.Quantity</td>
                                <td>@Model.CurrencyOption.Symbol@itemTotalCost.ToString("N2")</td>
                            </tr>
                            @if(@lineItem.Description != null && @lineItem.Description != ""){
                                <tr >
                                    <td colspan="100">
                                        @lineItem.Description
                                    </td>
                                </tr>
                            }
                        }
                        @{
                            grandTotalCost = subTotal;
                            if(Model.SalesTax > 0){
                                grandTotalCost += (double)Model.SalesTax;
                            }else{
                                Model.SalesTax = 0;
                            }
                            if(Model.WireTransferFee > 0){
                                grandTotalCost += (double)Model.WireTransferFee;
                            }else{
                                Model.WireTransferFee = 0;
                            }
                            if(Model.ShippingAndHandlingFee > 0){
                                grandTotalCost += (double)Model.ShippingAndHandlingFee;
                            }else{
                                Model.ShippingAndHandlingFee = 0;
                            }
                            if(Model.ExpediteFee > 0){
                                grandTotalCost += (double)Model.ExpediteFee;
                            }else{
                                Model.ExpediteFee = 0;
                            }
                        }
                    
                </table>
                <div class="total-container">
                    <div class="additional-charge">
                        <span class="additional-charge-title">Subtotal:</span>
                        <span class="additional-charge-value">@Model.CurrencyOption.Symbol@subTotal.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Sales Tax:</span>
                        <span class="additional-charge-value">@Model.CurrencyOption.Symbol@Model.SalesTax.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Wire Transfer Fee:</span>
                        <span class="additional-charge-value">@Model.CurrencyOption.Symbol@Model.WireTransferFee.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Shipping &amp; Handling:</span>
                        <span class="additional-charge-value">@Model.CurrencyOption.Symbol@Model.ShippingAndHandlingFee.Value.ToString("N2")</span>
                    </div>
                    <div class="additional-charge">
                        <span class="additional-charge-title">Expedite Fee:</span>
                        <span class="additional-charge-value">@Model.CurrencyOption.Symbol@Model.ExpediteFee.Value.ToString("N2")</span>
                    </div>
                    <span class="grand-total-title-text">Grand Total: </span>
                    <span class="grand-total-text">@Model.CurrencyOption.Symbol@grandTotalCost.ToString("N2")</span>
                </div>
            </div>
            <br>
            <!-- <div class="info-boxes-container">
                <div class="info-box first banking-info">
                    <div class="info-box-title">
                        <span class="info-box-title-text">Banking Info</span>
                    </div>
                    <div class="info-box-body">
                        @if(Convert.ToBoolean(ViewData["IsGidEurope"])){
                            <div>AIB Bank</div>
                            <div>DUBLIN 1</div>
                            <div>DUBLIN, IE</div>
                            <div>BIC: AIBKIE2D</div>
                            <div>Sort Code: 93-73-04</div>
                            <div>Beneficiary: GID Industrial (Europe), Ltd.</div>
                            <div>IBAN: IE66AIBK93730431191022</div>
                            <div>Address: Unit 3, Building 1</div>
                            <div>Bundoran Retail Park</div>
                            <div>Bundoran, Co. Donegal</div>
                        } else {
                            <div>Capital One Bank, NA</div>
                            <div>101 Stacy Road</div>
                            <div>Fairview, TX 75069-1519</div>
                            <div>USA</div>
                            <div>Beneficiary: GID Industrial</div>
                            <div>Account Number: 4670234954</div>
                            <div>Routing Number: 111901014</div>
                            <div>SWIFT Code: HIBKUS44</div>
                        }
                    </div>
                </div>
                @if(Convert.ToBoolean(ViewData["IsGidEurope"])){
                <div class="info-box first vat-info">
                    <div class="info-box-title">
                        <span class="info-box-title-text">VAT #</span>
                    </div>
                    <div class="info-box-body">
                        <div>IE3541034PH</div>
                    </div>
                </div>
                } -->
            </div>
            
        </div>
    </div>
</div>